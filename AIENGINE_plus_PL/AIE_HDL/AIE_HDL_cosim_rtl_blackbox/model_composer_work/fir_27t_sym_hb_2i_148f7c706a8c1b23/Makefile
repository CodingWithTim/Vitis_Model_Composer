# ==============================================================
# File generated by Xilinx Model Composer(TM)
# Version: 2022.1
#  
# (c) Copyright 2017 - 2022 Xilinx, Inc. All rights reserved.
#  
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#  
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#  
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#  
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
# ==============================================================
XMC_ROOT := /proj/xsjhdstaff4/abehbood/abehbood_XMC_2022.1/2022.1/prep/rdi/model_composer

CC := $(XILINX_VITIS_AIETOOLS)/bin/aie_clang++
ALT_CC := $(XILINX_VITIS_AIETOOLS)/tps/lnx64/gcc/bin/g++

CFLAGS := -D__X86SIM__ 
CFLAGS += 
CFLAGS += -I ../../
CFLAGS += -I /home/abehbood/.Xilinx/ModelComposer/SimCache/2022.1/7edd1494
CFLAGS += -I $(XMC_ROOT)/include/pch
CFLAGS += -I $(XILINX_VITIS_AIETOOLS)/include 
CFLAGS += -I $(XILINX_VITIS_AIETOOLS)/data/osci_systemc/include
CFLAGS += -I $(XILINX_HLS)/include
CFLAGS +=  -g -O0
CFLAGS +=  -fvisibility=hidden
#CFLAGS +=  -fno-gnu-unique

me_DIR := $(XILINX_VITIS_AIETOOLS)/data/cervino/lib
CHESSDIR := $(XILINX_VITIS_AIETOOLS)/tps/lnx64/target/chessdir
AIE_CFLAGS := -I $(me_DIR)
AIE_CFLAGS += -I $(CHESSDIR)
AIE_CFLAGS += -I $(XILINX_VITIS_AIETOOLS)/data/osci_systemc/include
AIE_CFLAGS += -I $(me_DIR)/designware/DWFC_fp/include
AIE_CFLAGS += -I $(me_DIR)/designware/DWFC_fp_multifunc/include
AIE_CFLAGS += -I $(me_DIR)/designware/dwfc_multifunc/include



LFLAGS := -Wl,--no-undefined 
LFLAGS += -L$(XMC_ROOT)/lib/lnx64.o
LFLAGS += -L $(XILINX_VITIS_AIETOOLS)/data/cervino/lib
LFLAGS += -L $(XILINX_VITIS_AIETOOLS)/lib/lnx64.o
LFLAGS += -lx86simStreamApiAIE1 -lx86sim
LFLAGS += -ladf_api_x86sim
LFLAGS += -lme_native
LFLAGS += -lpthread 
LFLAGS += -lsystemc
LFLAGS += $(XILINX_VITIS_AIETOOLS)/lib/lnx64.o/libc++.a
LFLAGS += $(XILINX_VITIS_AIETOOLS)/lib/lnx64.o/libc++abi.a

DEPFLAGS = -MT $@ -MMD -MP -MF $(<F).Td
POSTCOMPILE = @mv -f $(<F).Td $(<F).d && touch $@

SHLIB_OBJS := kernel_sim.cpp.o wrap_hb27_2i.cc.o 

all: libsim.so 

kernel_sim.cpp.o: kernel_sim.cpp 
	$(ALT_CC) $(CFLAGS) -std=c++14 $(AIE_CFLAGS) -I .. -fpic -c -o $@ $< 

wrap_hb27_2i.cc.o: wrap_hb27_2i.cc wrap_hb27_2i.cc.d
	$(CC) $(CFLAGS) -std=c++2a -stdlib=libc++ $(DEPFLAGS) -fpic -D__AIENGINE__ -D__AIEARCH__=1 $(DEPFLAGS) -c -o $@ $<
	$(POSTCOMPILE)

libsim.so: $(SHLIB_OBJS) 
	$(ALT_CC) -o $@ -shared $(SHLIB_OBJS) $(LFLAGS) 

%.d: ;
.PRECIOUS: %d.

clean: 
	-rm -f $(SHLIB_OBJS) libsim.so 
